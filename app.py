# -*- coding: utf-8 -*-
"""Despliegue proyecto.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12-GdYPQsZINV5ty84LV55QU3_CnRUfPT

# Despliegue

- Cargamos el modelo
- Cargamos los datos futuros
- Preparar los datos futuros
- Aplicamos el modelo para la predicción
"""

#Cargamos librerías principales
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

#Cargamos el modelo
import pickle
filename = 'proyecto_clasificacion_arbol.pkl'
modelo, labelencoder,variables,min_max_scaler = pickle.load(open(filename, 'rb'))

#Cargamos los datos futuros
#data = pd.read_csv("proyecto datos futuros.csv")
#data.head()

#Interfaz gráfica
#Se crea interfaz gráfica con streamlit para captura de los datos
#libreria para crear un HTML
#se ejecuta solo en un servidor web como streamlit

import streamlit as st

st.title('Predicción de si un cliente esta en mora')

Credit_rep_group = st.selectbox('Credit rep.group', ['Z01','Z02','Z03','Z04','Z05','Z06', 'Z07', 'Z08', 'Z09','Z10','Z11','Z12','Z14','Z15','Z16','Z17','Z18','Z20','Z21','Z22','Z25','Z26','Z27','Z29','Z30','Z31','Z32','Z36','Z38','Z40','Z43','Z45','Z46','Z48'])
Risk_category = st.selectbox('Risk category', ['2', '3', '4'])
Total_balance_in_Lc = st.number_input('Total balance in Lc', min_value=0, max_value=1000000000000, value=0)
From_1_To_30_Adjusted = st.number_input('From 1 to 30 Adjusted', min_value=0, max_value=1000000000000, value=0)
From_31_To_60_Adjusted = st.number_input('From 31 to 60 Adjusted', min_value=0, max_value=1000000000000, value=0)
From_91_To_Adjusted = st.number_input('From 91 to Adjusted', min_value=0, max_value=1000000000000, value=0)
Total_Past_Due_Adjusted = st.number_input('Total Past Due Adjusted', min_value=0, max_value=1000000000000, value=0)

#Dataframe
datos = [[Credit_rep_group, Risk_category, Total_balance_in_Lc, From_1_To_30_Adjusted, From_31_To_60_Adjusted,From_91_To_Adjusted,Total_Past_Due_Adjusted]]
data = pd.DataFrame(datos, columns=['Credit rep.group', 'Risk category', 'Total balance in Lc', 'From 1 To 30 Adjusted', 'From 31 To 60 Adjusted','From 91 To Adjusted','Total Past Due Adjusted'])

#Se realiza la preparación
data_preparada=data.copy()

#En despliegue drop_first= False
data_preparada = pd.get_dummies(data_preparada, columns=['Credit rep.group', 'Risk category'], drop_first=False, dtype=int)
data_preparada.head()

#Se adicionan las columnas faltantes
data_preparada=data_preparada.reindex(columns=variables,fill_value=0)
data_preparada.head()

data_preparada.info()

"""#**Predicciones**


"""

#Hacemos la predicción con el Tree
Y_pred = modelo.predict(data_preparada)
print(Y_pred)

data['Prediccion']=Y_pred
data.head()

data
#prediccion final